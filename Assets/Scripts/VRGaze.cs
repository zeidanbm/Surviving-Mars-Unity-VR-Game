using System.Collections;using System.Collections.Generic;using UnityEngine;using UnityEngine.UI;public interface IInteractableObject{    void activateObject();}public class VRGaze : MonoBehaviour{    public Image gazeImage;    public GameObject inventory;    public GameObject menuCanvas;    public AudioSource wrongItemSound;    public float rayDistance = 50;    private float totalTime = 1.5f;    private bool gazeStatus = false;        private RaycastHit hit;    private GameObject currentInteractable;    void Update()    {        if (gazeStatus)        {            gazeImage.fillAmount += Time.deltaTime / totalTime;        }        if (!Camera.main)            return;        Ray ray = Camera.main.ViewportPointToRay(new Vector3(0.5f, 0.5f, 0f));        if (Physics.Raycast(ray, out hit, rayDistance))        {            if (hit.transform.CompareTag("Pickable") && gazeImage.fillAmount == 1)            {                inventory.GetComponent<InventoryController>().pickUpItem(hit.transform.gameObject);                VRGazeOFF();            }            if (hit.transform.CompareTag("Interactable") && gazeImage.fillAmount == 1)            {                currentInteractable = hit.transform.gameObject;                inventory.GetComponent<InventoryController>().interactWithItem(hit.transform.gameObject);                VRGazeOFF();            }            if (hit.transform.CompareTag("InventoryClose") && gazeImage.fillAmount == 1)            {                inventory.GetComponent<InventoryController>().closeInventory();                VRGazeOFF();            }                        if (hit.transform.CompareTag("NewGameBtn") && gazeImage.fillAmount == 1)            {                menuCanvas.GetComponent<MenuController>().loadStartScene();                VRGazeOFF();            }            if (hit.transform.CompareTag("SettingsBtn") && gazeImage.fillAmount == 1)            {                menuCanvas.GetComponent<MenuController>().loadSettings();                VRGazeOFF();            }            if (hit.transform.CompareTag("BackBtn") && gazeImage.fillAmount == 1)            {                menuCanvas.GetComponent<MenuController>().loadMainMenu();                VRGazeOFF();            }            if (hit.transform.CompareTag("QuitBtn") && gazeImage.fillAmount == 1)            {                VRGazeOFF();                menuCanvas.GetComponent<MenuController>().quitGame();            }            if (hit.transform.CompareTag("PauseButton") && gazeImage.fillAmount == 1)            {                VRGazeOFF();                hit.transform.gameObject.GetComponent<PauseGame>().Pause();            }            if (hit.transform.CompareTag("SpaceHelmetBtn") && gazeImage.fillAmount == 1)            {                triggerButtonAction<OutsideController>("Cabinet");            }            if (hit.transform.CompareTag("ToolboxBtn") && gazeImage.fillAmount == 1)            {                triggerButtonAction<GeneratorController>("Generator");            }            if (hit.transform.CompareTag("Computer") && gazeImage.fillAmount == 1)            {                hit.transform.gameObject.GetComponent<ServerComputer>().showKeypad();            }            if (hit.transform.CompareTag("HumidityDevice") && gazeImage.fillAmount == 1)            {                hit.transform.gameObject.GetComponent<HumidityController>().showKeypad();            }        }    }    private void triggerButtonAction<T>(string interactableObjName)    {        if (currentInteractable.name == interactableObjName)        {            (currentInteractable.GetComponent<T>() as IInteractableObject).activateObject();            inventory.GetComponent<InventoryController>().removeItem(hit.transform.gameObject);        }        else        {            wrongItemSound.Play();        }        VRGazeOFF();    }    public void VRGazeON()    {        gazeStatus = true;    }    public void VRGazeOFF()    {        gazeStatus = false;        gazeImage.fillAmount = 0;    }}